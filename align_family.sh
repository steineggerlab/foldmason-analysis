#!/bin/bash -e

# Run tool suite on a given cluster folder.
# Assumes all tools on $PATH and directory structure:
#
# folder/
# 	pdbs/
# 		structureA.pdb
# 		structureB.pdb
#	folder_aa.fa
#	folder_msa.fa
#
# As generated by clean_homstrad.py

THREADS="${THREADS:=1}"
PDB="${1}/pdbs/"
AA="${1}/${1}_aa.fasta"

FMT="Command being timed: %C\nUser time (seconds): %U\nSystem time (seconds): %S\nPercent of CPU this job got: %P\nWall clock time (seconds): %e\nAverage shared text size (kbytes): %X\nAverage unshared data size (kbytes): %%D\nAverage stack size (kbytes): %p\nAverage total size (kbytes): %K\nMaximum resident set size (kbytes): %M\nAverage %resident set size (kbytes): %t\nMajor (requiring I/O) page faults: %F\nMinor (reclaiming a frame) page faults: %%R\nVoluntary context switches: %w\nInvoluntary context switches: %c\nSwaps: %W\nFile system inputs: %I\nFile system %outputs: %O\nSocket messages sent: %s\nSocket messages received: %r\nSignals delivered: %k\nPage size (bytes): %Z\nExit %status: %x"

# Structure aligners
if [ ! -e "${1}/caretta_results" && -x caretta-cli ]; then
	/usr/bin/time -o "${1}/caretta.time" -f "${FMT}" caretta-cli "$PDB" -t "$THREADS" -o "${1}/caretta_results"
fi
if [ ! -e "${1}/foldmason_aa.fa" && -x foldmason ]; then
	/usr/bin/time -o "${1}/foldmason.time" -f "${FMT}" foldmason easy-msa \
		"$PDB" "${1}/foldmason" "${1}/foldmason_tmp" \
		--threads $THREADS
fi
if [ ! -e "${1}/matt" && -x Matt ]; then
	/usr/bin/time -o "${1}/matt.time" -f "${FMT}" Matt -o "${1}/matt" $(find "$PDB" -type f) -t "$THREADS"
fi
if [ ! -e "${1}/mTM_result" && -x mTM-align ]; then
	/usr/bin/time -o "${1}/mtmalign.time" -f "${FMT}" mTM-align -i <(find "$PDB" -type f) -outdir "${1}/mTM_result"
fi
if [ ! -e "${1}/mustang" && -x mustang-3.2.4 ]; then
	/usr/bin/time -o "${1}/mustang.time" -f "${FMT}" mustang-3.2.4 -i $(find "$PDB" -type f) -F fasta -o "$RESULT"
fi

# Sequence aligners
if [ ! -e "${1}/clustalo.fa" && -x clustalo ]; then
	/usr/bin/time -o "${1}/clustalo.time" -f "${FMT}" clustalo -i "$AA" -o "${1}/clustalo.fa" --threads "$THREADS" --infmt fasta
fi
if [ ! -e "${1}/famsa.fa" && -x famsa ]; then
	/usr/bin/time -o "${1}/famsa.time" -f "${FMT}" famsa "$AA" "${1}/famsa.fa" -t "$THREADS"
fi
if [ ! -e "${1}/mafft.fa" && -x linsi ]; then
	/usr/bin/time -o "${1}/mafft.time" -f "${FMT}" linsi --thread "$THREADS" "$AA" > "${1}/mafft.fa"
fi
if [ ! -e "${1}/muscle.fa" && -x muscle5 ]; then
	/usr/bin/time -o "${1}/muscle.time" -f "${FMT}" muscle5 -align "${AA}" -output "${1}/muscle.fa" -threads "$THREADS"
fi

# Generate LDDT reports
DB="${1}/foldmason_tmp/latest/structures"
foldmason msa2lddtreport "$DB" "${1}/mustang/mustang.afasta" "${1}/mustang.html"
foldmason msa2lddtreport "$DB" "${1}/mTM_result/result.fasta" "${1}/mustang.html"
foldmason msa2lddtreport "$DB" "${1}/matt/matt.fasta" "${1}/matt.html"
foldmason msa2lddtreport "$DB" "${1}/caretta_results/result.fasta" "${1}/caretta.html"
foldmason msa2lddtreport "$DB" "${1}/clustalo.fa" "${1}/clustalo.html"
foldmason msa2lddtreport "$DB" "${1}/mafft.fa" "${1}/mafft.html"
foldmason msa2lddtreport "$DB" "${1}/famsa.fa" "${1}/famsa.html"
foldmason msa2lddtreport "$DB" "${1}/muscle.fa" "${1}/muscle.html"
